Данный модуль – часть программного обеспечения для моего ЧПУ-станка. Задача – преобразовать загруженную картинку в вид допустимый для обработки(вырезания) на яичной скорлупе с учетом профиля скорлупы. Это приложение с пользовательским интерфейсом, отдельно тестирования не реализовывал – долго, наблюдал результаты через ГУИ (Main_test). Мавен и прочие тулзы тут не нужны так как все написано на коре.   Модуль, по сути, автономный – на выход не дает ничего только возможность сохранить обработанную картинку. Задачи/виденье их реализации менялось в ходе написание – проект через это «страхолюдный». В общем – это окошко которое содержит загруженное с диска изображение и набор независимых вкладок для его обработки этого изображения по некоторым алгоритмам, некоторые вкладки «сырые» - они написаны, но не оптимизированные – просто отпала необходимость в их функционале (оставил так как может когда-то… GeometriaRavnomerno, Geometria). Параметры окошка указываются в файле пропертей, также у окошка специальные классы отображения графики. В случае необходимости добавить новый алгоритм – нужно наследовать абстрактный класс UpgradeImg, реализовать прорисовку компонентов и их логику и т д.

Недостатки и идеи для их устранения. Тут очевидно напрашивается паттерн «фактори». Все наследники UpgradeImg следует загнать под один интерфейс (методы хорошо видны на UML диаграмме) сам абстрактный  UpgradeImg нужно перевести в класс типа Utill – методы которые он содержит  нужны для большинства наследников. Также присутствует некоторая избыточность/ дублирование кода – так как не знал какие алгоритмы в принципе будут, какие методы и т д. Можно выделить промежуточные абстрактные классы для некоторых групп наследников UpgradeImg но они будут сильно параметризированными, пожалуй при существующем положении вещей этого делать не стоит.  Что еще – в идеале, стоило б побороться за перфоманс (математику попроще, меньше циклов, особенно вложенных, какие-то специальные сущности заточенные под производительность и т д), но затраты на обработку картинок (реально в 90% случаев это «гепардовая сетка» - Yasheiki) мене как заказчика устраивают =).

В общем по хорошему данную примочку что б все было «по феншую» стоит переписать под использования  фабрики, но эта задача нехитрая и достаточно долгая и скучная, по крайней мере тут. В принципе рефакторинг такая штука – всегда есть что переделать =)
